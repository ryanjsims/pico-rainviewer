import csv
from enum import Enum
import re

autogenerated_blurb = """
#pragma once
// AUTOGENERATED FILE - DO NOT EDIT MANUALLY
//
// This file is generated from the rainviewer api colors table - a copy is availiable in the scripts/
// directory of this repository, or it can be found at https://www.rainviewer.com/api/color-schemes.html

// These tables are indexed by the red (or green or blue) value of the equivalent black and white pixel.
// They have both rain (indices 0x00-0x7F) and snow (indices 0x80-0xFF) colors.

#include <stdint.h>

"""

def clean(s: str):
    # Replace @ with at
    s = re.sub('@', 'at', s)

    # Replace the
    s = re.sub('^The ', '', s)

    # Replace TWC
    s = re.sub('\(TWC\)', '', s)

    # Replace whitespace with underscore
    s = re.sub('\W+', '_', s)

    # Remove invalid characters
    s = re.sub('[^0-9a-zA-Z_]', '', s)

    # Remove leading characters until we find a letter or underscore
    s = re.sub('^[^a-zA-Z_]+', '', s)

    return s.lower().rstrip('_')

class State(Enum):
    RAIN = 0
    SNOW = 1

f = open("rainviewer_api_colors_table.csv")

with open("../include/color_tables.h", "w") as out:
    out.write(autogenerated_blurb)
    reader = csv.reader(f)

    first = True
    header = next(reader)
    for i, scheme in enumerate(header[1:]):
        if not first:
            out.write("\n};\n\n")
        first = False
        out.write(f"const uint32_t {clean(scheme)}_color_table[256] = " + "{\n")
        for j, line in enumerate(reader):
            if j % 4 == 0:
                newline = "\n"
                out.write(f"{newline if j != 0 else ''}    ")
            value = int(line[i+1].strip('#'), 16)
            alpha = value & 0x000000FF
            red = (value & 0xFF000000) >> 24
            green = (value & 0x00FF0000) >> 16
            blue = (value & 0x0000FF00) >> 8
            out.write(f"0x{red | green << 8 | blue << 16 | alpha << 24:08x}, ")
        f.seek(0)
        next(reader)
    out.write("\n};\n\n")
